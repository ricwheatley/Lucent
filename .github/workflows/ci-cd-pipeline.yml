name: CI/CD Pipeline for Lucent

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  DOTNET_VERSION: '8.0.x'
  SOLUTION_FILE: 'Lucent.sln'

jobs:
  build-and-test:
    name: 🛠️ Build & Test
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: ⚙️ Setup .NET ${{ env.DOTNET_VERSION }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: 📦 Restore Dependencies
        run: dotnet restore ${{ env.SOLUTION_FILE }}

      - name: 🚧 Build Solution
        run: dotnet build ${{ env.SOLUTION_FILE }} --configuration Release --no-restore

      - name: 🧪 Run Unit Tests
        run: dotnet test ${{ env.SOLUTION_FILE }} --configuration Release --no-build --verbosity normal --collect:"XPlat Code Coverage"

      - name: 📊 Publish Test Results
        uses: actions/upload-artifact@v4
        with:
          name: Test Results
          path: '**/TestResults/*.xml'

      - name: 📈 Publish Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: Coverage Report
          path: '**/coverage.cobertura.xml'

  deploy-dev:
   name: 🚀 Deploy to Development (Manual Approval)
   needs: build-and-test
   runs-on: ubuntu-latest
   environment:
    name: Development
    url: https://your-development-environment-url.com

   steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4

    - name: ⚙️ Setup .NET ${{ env.DOTNET_VERSION }}
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: 📦 Restore Dependencies
      run: dotnet restore ${{ env.SOLUTION_FILE }}

    - name: 🚧 Publish Lucent.Api explicitly to isolated directory
      run: dotnet publish Lucent.Api/Lucent.Api.csproj -c Release -o ./publish-output/Lucent.Api --no-restore

    - name: 🚚 Upload Lucent.Api Artifact
      uses: actions/upload-artifact@v4
      with:
        name: Lucent-Api-App
        path: ./publish-output/Lucent.Api

    - name: 🚧 Publish Lucent.Loader explicitly to isolated directory
      run: dotnet publish Lucent.Loader/Lucent.Loader.csproj -c Release -o ./publish-output/Lucent.Loader --no-restore

    - name: 🚚 Upload Lucent.Loader Artifact
      uses: actions/upload-artifact@v4
      with:
        name: Lucent-Loader-App
        path: ./publish-output/Lucent.Loader

    - name: 🚧 Publish Lucent.Scheduler explicitly to isolated directory
      run: dotnet publish Lucent.Scheduler/Lucent.Scheduler.csproj -c Release -o ./publish-output/Lucent.Scheduler --no-restore

    - name: 🚚 Upload Lucent.Scheduler Artifact
      uses: actions/upload-artifact@v4
      with:
        name: Lucent-Scheduler-App
        path: ./publish-output/Lucent.Scheduler
